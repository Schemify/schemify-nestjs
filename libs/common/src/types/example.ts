// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.0
//   protoc               v3.20.3
// source: proto/example.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices'
import { Observable } from 'rxjs'

export const protobufPackage = 'example'

export interface PaginationDto {
  page: number
  skip: number
}

/** Mensaje vacío utilizado para las peticiones que no requieren datos adicionales. */
export interface Empty {}

/** Mensaje utilizado para crear un nuevo ejemplo. */
export interface CreateExampleDto {
  name: string
  description?: string | undefined
}

/** Mensaje utilizado para actualizar un ejemplo existente. */
export interface UpdateExampleDto {
  id: string
  example: Example | undefined
}

/** Mensaje utilizado para obtener un ejemplo por su ID. */
export interface GetExampleByIdDto {
  id: string
}

/** Mensaje utilizado para devolver un ejemplo. */
export interface Examples {
  examples: Example[]
}

/** Mensaje que representa un ejemplo en la aplicación. */
export interface Example {
  /** Identificador único del ejemplo. */
  id: string
  name: string
  description?: string | undefined
}

export const EXAMPLE_PACKAGE_NAME = 'example'

/**
 * Contratos de comunicación entre el cliente y el servidor
 * para la gestión de ejemplos en la aplicación.
 */

export interface ExampleServiceClient {
  createExample(request: CreateExampleDto): Observable<Example>

  getAllExamples(request: Empty): Observable<Examples>

  getExampleById(request: GetExampleByIdDto): Observable<Example>

  updateExample(request: UpdateExampleDto): Observable<Example>

  deleteExample(request: GetExampleByIdDto): Observable<Empty>

  queryExamples(request: Observable<PaginationDto>): Observable<Examples>
}

/**
 * Contratos de comunicación entre el cliente y el servidor
 * para la gestión de ejemplos en la aplicación.
 */

export interface ExampleServiceController {
  createExample(
    request: CreateExampleDto
  ): Promise<Example> | Observable<Example> | Example

  getAllExamples(
    request: Empty
  ): Promise<Examples> | Observable<Examples> | Examples

  getExampleById(
    request: GetExampleByIdDto
  ): Promise<Example> | Observable<Example> | Example

  updateExample(
    request: UpdateExampleDto
  ): Promise<Example> | Observable<Example> | Example

  deleteExample(
    request: GetExampleByIdDto
  ): Promise<Empty> | Observable<Empty> | Empty

  queryExamples(request: Observable<PaginationDto>): Observable<Examples>
}

export function ExampleServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = [
      'createExample',
      'getAllExamples',
      'getExampleById',
      'updateExample',
      'deleteExample'
    ]
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method
      )
      GrpcMethod('ExampleService', method)(
        constructor.prototype[method],
        method,
        descriptor
      )
    }
    const grpcStreamMethods: string[] = ['queryExamples']
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method
      )
      GrpcStreamMethod('ExampleService', method)(
        constructor.prototype[method],
        method,
        descriptor
      )
    }
  }
}

export const EXAMPLE_SERVICE_NAME = 'ExampleService'
